---
- file:
    path: "{{ sto_path }}/templates/{{ inventory_hostname }}"
    state: directory
    mode: 0755

- name: Search all containers name
  shell: "curl -G 'http://{{ hostvars['node1']['ansible_' + docker_swarm_interface]['ipv4']['address'] }}:8076/query?pretty=true' --data-urlencode 'db=telegraf_{{ inventory_hostname }}' --data-urlencode 'q=show tag values from docker_container_cpu with key = container_name'" 
  register: query_result 
 
- set_fact: 
    query_result_output: "{{ query_result.stdout|from_json}}" 

- debug: 
    msg: "{{ query_result_output }}" 
- set_fact:  
    container_names: [] 
- set_fact:   
    container_names: "{{ container_names }} + ['{{ item }}']"   
  when: item !=  'container_name'
  with_items: "{{ query_result_output['results'][0]['series'][0]['values'] }}" 
 
- name: Create template for each container in every host 
  template:  
    src: dashboard_container.json.j2 
    dest: "{{ sto_path }}/templates/{{ inventory_hostname }}/{{ inventory_hostname }}_{{ item }}.json" 
    mode: 0644 
  with_items: "{{ container_names }}" 
  
- name: Push containers dashboard into Grafana
  shell: "curl -X POST -i -u admin:{{ grafana_default_pass }} -H 'Content-Type: application/json' -d @{{ sto_path }}/templates/{{ inventory_hostname }}/{{ inventory_hostname }}_{{ item }}.json http://{{ hostvars['node1']['ansible_' + grafana_expose_interface]['ipv4']['address'] }}:2000/api/dashboards/db"
  with_items: "{{ container_names }}"

- name : Create template for each node
  template: 
    src: dashboard_monitoring.json.j2
    dest: "{{ sto_path }}/templates/{{ inventory_hostname }}/{{ inventory_hostname }}.json"
    mode: 0644

- name: Push nodes dashboard into Grafana
  shell: "curl -X POST -i -u admin:{{ grafana_default_pass }} -H 'Content-Type: application/json' -d @{{ sto_path }}/templates/{{ inventory_hostname }}/{{ inventory_hostname }}.json http://{{ hostvars['node1']['ansible_' + grafana_expose_interface]['ipv4']['address'] }}:2000/api/dashboards/db"

- name: Create template for general host
  template: 
    src: dashboard_general.json.j2
    dest: "{{ sto_path }}/templates/general.json"
    mode: 0644
  when: inventory_hostname == 'node1'

- name: Push general dashobard into Grafana
  shell: "curl -X POST -i -u admin:{{ grafana_default_pass }} -H 'Content-Type: application/json' -d @{{ sto_path }}/templates/general.json http://{{ hostvars['node1']['ansible_' + grafana_expose_interface]['ipv4']['address'] }}:2000/api/dashboards/db"
  when: inventory_hostname == 'node1'
