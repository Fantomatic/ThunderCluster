---
- name: target for influxdb database on sto
  file:
    path: "{{ sto_path }}/influxdb-monitoring/{{ inventory_hostname }}"
    state: directory
    mode: 0755
  when: inventory_hostname == 'node1'

- name: write fichier de configuration influxdb
  template:
    src: influxdb.conf.j2
    dest: "{{ container_conf }}/influxdb.conf"
  tags: influxdb

- name: launch influxdb container
  docker_container:
    name: influxdb
    image: influxdb:1.3
    command: "-config /etc/influxdb/influxdb.conf"
    published_ports: 
      - "{{ docker_swarm_addr }}:8073:8083"
      - "{{ docker_swarm_addr }}:8076:8086"
    volumes: 
      - "{{ sto_path }}/influxdb-monitoring/{{ inventory_hostname}}:/var/lib/influxdb"
      - "{{ container_conf }}/influxdb.conf:/etc/influxdb/influxdb.conf:ro"
  when: inventory_hostname == 'node1'

- name: write fichier configuration telegraf
  template:
    src: telegraf.conf.j2
    dest: "{{ container_conf }}/telegraf.conf"
  tags : telegraf

- name: launch telegraf
  docker_container: 
     name: telegraf
     image: telegraf:1.3.4
     volumes: 
       - "{{ container_conf }}/telegraf.conf:/etc/telegraf/telegraf.conf:ro"     
       - "/var/run/docker.sock:/var/run/docker.sock"
  tags: telegraf

- name: create directory storage grafana
  file: 
    path: "{{ sto_path }}/grafana-monitoring"
    state: directory
    mode: 0755 
  delegate_to: node1

- name: launch grafana persistent storage
  docker_container: 
     name: grafana-sto-monitoring
     image: busybox:1.27
     volumes: "{{ sto_path }}/grafana-monitoring:/var/lib/grafana" 
  when: inventory_hostname == 'node1'

- name: create directory configuration grafana
  file: 
    path: "{{ sto_path }}/grafana-configuration"
    state: directory
    mode: 0755 
  delegate_to: node1

- name: generate configuration for grafana
  template:
    src: grafana.ini.j2
    dest: "{{ sto_path }}/grafana-configuration/grafana.ini"
    mode: 0664
    owner: root
    group: root

- name: launch grafana persistent configuration
  docker_container:
     name: grafana-sto-configuration
     image: busybox:1.27
     volumes: "{{ sto_path }}/grafana-configuration:/etc/grafana"
  when: inventory_hostname == 'node1'

- name : launch grafana container
  docker_container: 
     name: grafana
     image: grafana/grafana:4.4.1
     volumes_from: 
       - grafana-sto-monitoring
       - grafana-sto-configuration
     published_ports: 
       - "{{ grafana_expose_addr }}:2000:3000" 
     env: 
       GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_default_pass }}"
       GF_INSTALL_PLUGINS: "vonage-status-panel,jdbranham-diagram-panel"
  when: inventory_hostname == 'node1'

- include: link.yml
